 (function() {

	'use strict';

	angular
		.module('nhs', [
			'ui.router',
			'ngAnimate',
			'ngSanitize',
			'chart.js'
		]);

})();
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.run( run );

	run.$inject = [ '$rootScope', '$window', '$timeout', '$state', '$location' ];

	function run( $rootScope, $window, $timeout, $state, $location ) {

		// Body classes

		$rootScope.classes = [];

		// State change start

		$rootScope.$on( '$stateChangeStart', function( event, toState, toParams, fromState, fromParams, options ) {
			$rootScope.classes = [];
			$rootScope.fixed = false;
			$rootScope.loading = true;
		});


		// State change success

		$rootScope.$on( '$stateChangeSuccess', function( event, toState, toParams, fromState, fromParams, options ) {
			$window.scrollTo(0, 0);
			$rootScope.loading = false;
			$rootScope.classes.push( toState.name.split( '.' ).join( '-' ).replace( '_', '-' ) );
		});

	}

})();
 (function() {

 	'use strict';

 	angular
	 	.module( 'nhs' )
	 	.config( config );

 	config.$inject = [ '$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider', '$sceDelegateProvider', '$urlMatcherFactoryProvider', '$provide', '$qProvider', 'ChartJsProvider' ];

 	function config( $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider, $sceDelegateProvider, $urlMatcherFactoryProvider, $provide, $qProvider, ChartJsProvider ) {

 		// HTML5 mode for pretty URLs

 		$locationProvider.html5Mode( true );

 		$httpProvider.useApplyAsync( true );

 		// Remove any trailing slashes from URLs as they break ui-router

		$urlRouterProvider.rule(function( $injector, $location ) {
			var path = $location.path();
			var hasTrailingSlash = path[path.length-1] === '/';
			if( hasTrailingSlash ) {
				var newPath = path.substr( 0, path.length - 1 ); 
				return newPath; 
			} 
		});

		ChartJsProvider.setOptions({ 
			colors : [ 
				'#803690', 
				'#E8EDEE', 
				'#DA291C', 
				'#00A499', 
				'#FAE100', 
				'#768692', 
				'#425563'
			],
			legend: {
				display: true,
				position: 'bottom'
			},
			global: {
				defaultFontFamily: 'raleway',
				defaultFontSize: 11,
				defaultFontStyle: '700'
			},
			animation: {
				duration: 2000
			}
		});

		// Catch all non defined routes

		$urlRouterProvider.otherwise( 'main.home' );

		// Main abstract parent state

		$stateProvider

		// Main

		.state( 'main', main_config() )

		// Understand 

		.state( 'main.understand', understand_config() )

		// Project 

		.state( 'main.project', project_config() )

		// Decide

		.state( 'main.decide', decide_config() )

		// Collate

		.state( 'main.collate', collate_config() )

		// Dashboard

		.state( 'main.dashboard', dashboard_config() )

		// Home (redundant - transitions to understand)

		.state( 'main.home', home_config() );

	}

})();
function collate_config( ) {

	return {
		url: '/collate',
		views: {
			'content': {
				templateUrl: '/views/collate.html',
				controller: 'CollateController',
				controllerAs: 'collate'
			}
		}
	};

}
function dashboard_config() {

	return {
		url: '/dashboard',
		views: {
			'content': {
				templateUrl: '/views/dashboard.html',
				controller: 'DashboardController',
				controllerAs: 'dashboard'
			}
		}
	};

}
function decide_config() { 

	return {
		url: '/decide',
		views: {
			'content': {
				templateUrl: '/views/decide.html',
				controller: 'DecideController',
				controllerAs: 'decide'
			}
		}
	};

}
function home_config() {

	return {
		url: '/',
		views: {
			'content': {
				templateUrl: '/views/home.html',
				controller: 'HomeController',
				controllerAs: 'home'
			}
		}
	};

}
function main_config() {

	return {
		abstract: true,
		views: {
			'layout': {
				controller: 'MainController',
				controllerAs: 'main'
			}
		},
		resolve: {
			contacts: [ 'contactsFactory', function( contactsFactory ) {
				return contactsFactory.getContacts();	
			}]
		}
	};

}
function project_config( ) {

	return {
		url: '/project',
		views: {
			'content': {
				templateUrl: '/views/project.html',
				controller: 'ProjectController',
				controllerAs: 'project'
			}
		}
	};

}
function understand_config( ) {

	return {
		url: '/understand',
		views: {
			'content': {
				templateUrl: '/views/understand.html',
				controller: 'UnderstandController',
				controllerAs: 'understand'
			}
		}
	};

}
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.controller( 'DashboardController', DashboardController );

	DashboardController.$inject = [ '$scope', 'contacts' ];

	function DashboardController( $scope, contacts ) {

		var dashboard = this;
		dashboard.contacts = contacts;

		dashboard.graph = {
			labels: ["JAN","FEB","MAR","APR","MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"],
			series: ['Projected','Actual'],
			data: [
				[
					'8.333333333333333',
					'16.666666666666667',
					'25',
					'33.333333333333333',
					'41.666666666666666',
					'50',
					'58.333333333333333',
					'66.666666666666666',
					'75',
					'83.333333333333333',
					'91.666666666666666',
					'100'
				],
				['9','14','21','28','75']
			]
		};

		$scope.$on( '$destroy', function() {
			dashboard = null;
		});

	}
	
})();
(function() {
	'use strict';

	angular
	.module( 'nhs' )
	.controller( 'CollateController', CollateController );

	CollateController.$inject = [ '$rootScope', '$scope', '$interval' ];

	function CollateController( $rootScope, $scope, $interval ) {

		var collate = this;
		collate.random_user = Math.floor( ( Math.random() * 1000 ) + 1 );

		$rootScope.$broadcast( 'collate' );

		// Top graph

		collate.chart = {};
		collate.chart.labels = ["2019", "2020", "2021", "2022", "2023", "2024"];
		collate.chart.series = ['BUDGET', 'HIP REPLACEMENTS', 'TRAMADOL PRESCRIPTIONS'];
		collate.chart.data = [
			[5, 10, 15, 20, 25, 30, 35],
			[10, 14, 18, 32, 26, 48, 48],
			[16, 22, 28, 38, 42, 24, 10]
		];

		// Switch models

		collate.switch_model = [
			true, 
			false,
			true,
			true,
			false
		];

		// Slider models

		collate.slider_models = [
			40,
			80,
			12,
			26
		];

		collate.show_query_results = function(event) {
			event.preventDefault();
			collate.reveal_results = true;
		};

		collate.clear_query = function() {

		};

		// Randomise based on user action

		collate.randomize = function () {
			collate.chart.data = collate.chart.data.map( function( data ) {
				return data.map(function (y) {
					y = y + Math.random() * 4 - 2;
					return parseInt(y < 0 ? 0 : y > 100 ? 100 : y);
				});
			});
		};

		collate.increment = function( min, max ) {
			collate.chart.data = collate.chart.data.map( function( data ) {
				return data.map( function( y ) {
					min = Math.ceil( min );
					max = Math.floor( max );
					return y + Math.floor(Math.random() * ( max - min ) ) + min;
				});
			});
		};

		collate.real_time = $interval( function() {
			collate.increment( 1, 3 );
		}, 5000 );


		collate.open_case_study = function( title ) {
			collate.case_study_open = true;
			collate.case_study_title = title + ' Case Study';
		};

		// Case study graph

		collate.case_study = {};
		collate.case_study.labels = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
		collate.case_study.series = ['Budget'];
		collate.case_study.data = [
			[6, 8.2, 7.5, 5.4, 5.8, 6.2, 6.3, 6.58, 5.4, 5.2, 4.8, 4],
		];

		// angular.forEach( collate.case_study.data, function( value, key ) {
		// 	collate.case_study.data[key].reverse();
		// });

		collate.uptake = {
			series: [
				'NHS Croydon CCG',
				'NHS Aylesbury Vale CCG',
				'HS Cumbria CCG',
				'NHS Medway CCG'
			],
			labels: ["Previous surgery","Living Arrangements","Disability","Heart Disease","High Blood Pressure","Stroke","Circulation","Lung Disease","Diabets","Cancer","Depression","Arthritis"],
			data: [
				["4","3","8","7","7","6","4","7","2","2","4","7"], 
				["6","2","7","5","6","5","3","6","2","1","5","6"], 
				["8","1","3","3","9","6","5","8","3","5","3","7"], 
				["7","5","5","5","5","6","4","7","2","2","4","5"]
			],
			options: {
		        scales: {
		            xAxes: [{
		                barThickness: 4
		            }],
		            yAxes: [{
		                barThickness: 4
		            }]
		        }
			}
		};

		collate.enable_fragility = true;
		collate.enable_obesity = true;
		collate.enable_physio = true;
		collate.enable_lifestyle = true;

		// Availability chart

		collate.availability = {
			series: [
				'Leeds General Infirmary',
				'St Jamess University Hospital',
				'Chapel Allerton Hospital',
				'Seacroft Hospital',
				'Wharfedale Hospital'
			],
			labels: [
				'Clinicians',
				'Surgeons',
				'Beds',
				'Nursing staff'
			],
			data: [
				['24', '48', '42', '63', '43'],
				['31', '29', '36', '15', '47'],
				['27', '22', '52', '14', '52'],
				['28', '19', '42', '39', '18'],
				['36', '15', '37', '28', '58'],
				['29', '26', '49', '45', '65']
			],
			options: {
		        scales: {
		            xAxes: [{
		                barThickness: 4
		            }],
		            yAxes: [{
		                barThickness: 4
		            }]
		        }
			}
		};

		collate.increment_availability = function() {
			angular.forEach( collate.availability.data, function( value, key ) {
				angular.forEach( value, function( v, k ) {
					if( Math.random() < 0.5 ) {
						var min = Math.ceil( parseInt( v ) - 2 );
						var max = Math.floor( parseInt( v ) + 2 );
						collate.availability.data[key][k] = Math.random() * ( max - min ) + min;
					}
				});
			});
		};

		collate.real_time_availability = $interval( function() {
			collate.increment_availability();
		}, 3000 );

		$scope.$on( '$destroy', function() {
			$interval.cancel( collate.real_time );
			$interval.cancel( collate.real_time_availability );
			collate = null;
		});


	}

})();
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.controller( 'DecideController', DecideController );

	DecideController.$inject = [ '$scope', '$rootScope', 'contacts' ];

	function DecideController( $scope, $rootScope, contacts ) {

		var decide = this;
		decide.contacts = contacts;

		decide.hide_suggestions = function() {
			if( ! decide.block_remove ) {
				decide.show_suggestions = false;
			}
		};

		decide.select_user = function( index ) {
			decide.block_remove = false;
			decide.show_suggestions = false;
		};

		decide.set_active_day = function( event ) {
			angular.element( '.day.active' ).removeClass( 'chosen' );
			angular.element( event.target ).addClass( 'chosen' );
		};

		$scope.$on( '$destroy', function() {
			decide = null;
		});

	}
	
})();
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.controller( 'HomeController', HomeController );

	HomeController.$inject = [ '$scope', '$state' ];

	function HomeController( $scope, $state ) {

		var home = this;

		// This state now unecessary - go to start of journey

		$state.go( 'main.understand' );

		$scope.$on( '$destroy', function() {
			home = null;
		});

	}
	
})();
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.factory( 'contactsFactory', contactsFactory );

	contactsFactory.$inject = [ '$http' ];

	function contactsFactory( $http ) {

		return {
			getContacts: getContacts
		};

		function getContacts( slug ) {
	        
			return $http.get( '/assets/js/contacts.js' )
				.then( getContactsComplete )
				.catch( getContactsFailed );

			function getContactsComplete( response ) {
				return response.data;
			}

			function getContactsFailed( error ) {
				console.log('XHR Failed for getContacts.' + error.data);
			}

		}

	}

})();
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.controller( 'MainController', MainController );

	MainController.$inject = [ '$window', '$rootScope', '$scope', 'contacts', '$timeout', '$state', '$interval' ];

	function MainController( $window, $rootScope, $scope, contacts, $timeout, $state, $interval ) {

		var main = this;
		main.contacts = contacts;

		$rootScope.mobile = ( $window.innerWidth < 961 ? true : false );

		main.reset_menus = function() {
			$timeout( function() {
				if( main ) {
					main.menu_open = ! $rootScope.mobile;
				}
			});
		};

		main.toggle_menu = function() {
			main.menu_open = ! main.menu_open;
		};

		main.reset_menus();

		main.is_mobile = function() {
			$timeout( function() {
				$rootScope.mobile = ( $window.innerWidth < 961 ? true : false );
				main.reset_menus();
				$rootScope.$broadcast( 'window-resized' );
			});
		};

		main.resize_event = function() {
			$timeout.cancel( main.after_resize );
			main.after_resize = $timeout( function() {
				main.is_mobile();
			}, 750);
		};

		angular.element( $window ).on( 'resize', main.resize_event );

		$scope.$on( '$stateChangeStart', main.reset_menus );

		main.toggle_chat = function() {
			$timeout( function() {
				if( main.chat_open ) {
					$rootScope.classes.splice( $rootScope.classes.indexOf( 'chat-open' ), 1 );
				} else {
					$rootScope.classes.push( 'chat-open' );
				}
				main.chat_open = ! main.chat_open;
			});
		};

		main.random_users = [
			Math.floor( ( Math.random() * 1000 ) + 1 ),
			Math.floor( ( Math.random() * 1000 ) + 1 ),
			Math.floor( ( Math.random() * 1000 ) + 1 ),
			Math.floor( ( Math.random() * 1000 ) + 1 )
		];

		main.message_list = [];

		angular.forEach( main.random_users, function( value, key ) {
			main.message_list.push( main.contacts[value] );
			main.message_list[key].messages[0].date = new Date().toDateString();
		});

		main.message_provider = $interval( function() {
			var i = Math.floor( ( Math.random() * 900 ) + 1 );
			main.message_list.unshift( main.contacts[i] );
			var date = new Date();
			main.message_list[0].messages[0].date = date.toDateString() + ' - ' + date.toLocaleTimeString();
			if( main.message_timeout ) {
				$timeout.cancel( main.message_timeout );
				main.message = null;
			}
			main.message_added = 'New message from ' + main.contacts[i].first_name + ' ' + main.contacts[i].last_name;
			main.message_timeout = $timeout( function() {
				main.message_added = null;
			}, 3200 );
			if( main.message_list.length > 19 ) {
				main.message_list.pop();
			}
		}, Math.floor( ( Math.random() * 17000 ) + 5000 ) );

		$scope.$on( '$stateChangeStart', function() {
			main.chat_open = false;
			if( $rootScope.classes.indexOf( 'chat-open' ) > -1 ) {
				$rootScope.classes.splice( $rootScope.classes.indexOf( 'chat-open' ), 1 );
			}
		});

		main.listen = $scope.$on( 'collate', function() {
			main.chat_open = true;
			$rootScope.classes.push( 'chat-open' );
		});

		$scope.$on( '$destroy', function() {
			main = null;
		});

	}
	
})();
(function() {

	'use strict';

	angular
		.module( 'nhs' )
		.directive( 'siteLoader', siteLoader );

	function siteLoader() {

		return {
			restrict: 'E',
			template: '<div class="loader-wrap" data-ng-if="loading"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="4" stroke-miterlimit="10"/></svg></div>'
		};

	}

})();
(function() {
	'use strict';

	angular
	.module( 'nhs' )
	.controller( 'ProjectController', ProjectController );

	ProjectController.$inject = [ '$scope', '$interval' ];

	function ProjectController( $scope, $interval ) {

		var project = this;
		project.random_user = Math.floor( ( Math.random() * 1000 ) + 1 );

		// Top graph

		project.chart = {};
		project.chart.labels = ["2019", "2020", "2021", "2022", "2023", "2024"];
		project.chart.series = ['BUDGET', 'HIP REPLACEMENTS', 'TRAMADOL PRESCRIPTIONS'];
		project.chart.data = [
			[5, 10, 15, 20, 25, 30, 35],
			[10, 14, 18, 32, 26, 48, 48],
			[16, 22, 28, 38, 42, 24, 10]
		];

		// Switch models

		project.switch_model = [
			true, 
			false,
			true,
			true,
			false
		];

		// Slider models

		project.slider_models = [
			40,
			80,
			12,
			26
		];

		project.show_query_results = function(event) {
			event.preventDefault();
			project.reveal_results = true;
		};

		project.clear_query = function() {

		};

		// Randomise based on user action

		project.randomize = function () {
			project.chart.data = project.chart.data.map( function( data ) {
				return data.map(function (y) {
					y = y + Math.random() * 4 - 2;
					return parseInt(y < 0 ? 0 : y > 100 ? 100 : y);
				});
			});
		};

		project.increment = function( min, max ) {
			project.chart.data = project.chart.data.map( function( data ) {
				return data.map( function( y ) {
					min = Math.ceil( min );
					max = Math.floor( max );
					return y + Math.floor(Math.random() * ( max - min ) ) + min;
				});
			});
		};

		project.real_time = $interval( function() {
			project.increment( 1, 3 );
		}, 5000 );


		project.open_case_study = function( title ) {
			project.case_study_open = true;
			project.case_study_title = title + ' Case Study';
		};

		// Case study graph

		project.case_study = {};
		project.case_study.labels = ["2019", "2020", "2021", "2022", "2023"];
		project.case_study.series = ['HIP REPLACEMENTS', 'WEATHER', 'TRAMADOL PRESCRIPTIONS'];
		project.case_study.data = [
			[4, 12, 60, 54, 72, 90],
			[10, 14, 18, 32, 26, 48],
			[16, 22, 28, 38, 42, 48]
		];

		angular.forEach( project.case_study.data, function( value, key ) {
			project.case_study.data[key].reverse();
		});

		project.uptake = {
			series: [
				'NHS Croydon CCG',
				'NHS Aylesbury Vale CCG',
				'HS Cumbria CCG',
				'NHS Medway CCG'
			],
			labels: ["Previous surgery","Living Arrangements","Disability","Heart Disease","High Blood Pressure","Stroke","Circulation","Lung Disease","Diabets","Cancer","Depression","Arthritis"],
			data: [
				["4","3","8","7","7","6","4","7","2","2","4","7"], 
				["6","2","7","5","6","5","3","6","2","1","5","6"], 
				["8","1","3","3","9","6","5","8","3","5","3","7"], 
				["7","5","5","5","5","6","4","7","2","2","4","5"]
			],
			options: {
		        scales: {
		            xAxes: [{
		                barThickness: 4
		            }],
		            yAxes: [{
		                barThickness: 4
		            }]
		        }
			}
		};

		project.enable_fragility = true;
		project.enable_obesity = true;
		project.enable_physio = true;
		project.enable_lifestyle = true;

		// Availability chart

		project.availability = {
			series: [
				'Leeds General Infirmary',
				'St Jamess University Hospital',
				'Chapel Allerton Hospital',
				'Seacroft Hospital',
				'Wharfedale Hospital'
			],
			labels: [
				'Clinicians',
				'Surgeons',
				'Beds',
				'Nursing staff'
			],
			data: [
				['24', '48', '42', '63', '43'],
				['31', '29', '36', '15', '47'],
				['27', '22', '52', '14', '52'],
				['28', '19', '42', '39', '18'],
				['36', '15', '37', '28', '58'],
				['29', '26', '49', '45', '65']
			],
			options: {
		        scales: {
		            xAxes: [{
		                barThickness: 4
		            }],
		            yAxes: [{
		                barThickness: 4
		            }]
		        }
			}
		};

		project.increment_availability = function() {
			angular.forEach( project.availability.data, function( value, key ) {
				angular.forEach( value, function( v, k ) {
					if( Math.random() < 0.5 ) {
						var min = Math.ceil( parseInt( v ) - 2 );
						var max = Math.floor( parseInt( v ) + 2 );
						project.availability.data[key][k] = Math.random() * ( max - min ) + min;
					}
				});
			});
		};

		project.real_time_availability = $interval( function() {
			project.increment_availability();
		}, 3000 );

		$scope.$on( '$destroy', function() {
			$interval.cancel( project.real_time );
			$interval.cancel( project.real_time_availability );
			project = null;
		});


	}

})();
(function() {
	'use strict';

	angular
	.module( 'nhs' )
	.controller( 'UnderstandController', UnderstandController );

	UnderstandController.$inject = [ '$scope', '$timeout', '$interval' ];

	function UnderstandController( $scope, $timeout, $interval ) {

		var understand = this;
		understand.random_user = Math.floor( ( Math.random() * 1000 ) + 1 );

		// Top graph

		understand.chart = {};
		understand.chart.labels = ["2019", "2020", "2021", "2022", "2023"];
		understand.chart.series = ['BUDGET', 'HIP REPLACEMENTS', 'TRAMADOL PRESCRIPTIONS'];
		understand.chart.data = [
			[5, 10, 15, 20, 25, 30],
			[10, 14, 18, 32, 26, 48],
			[16, 22, 28, 38, 42, 48]
		];

		// Query chart

		understand.uptake = {};
		understand.uptake.labels = ['Pregnant', '6 months - 65 at risk', '65+',];
		understand.uptake.series = ['Registered patients', '2016 uptake', 'Projected uptake'];
		understand.uptake.legend = ['Total patients', '2016 uptake', 'Projected uptake'];

		understand.uptake.data = [
			[20491, 14429, 1376],
			[14606, 5865, 633],
			[18200, 10500, 1100]
		];

		angular.forEach( understand.uptake.data, function( value, key ) {
			understand.uptake.data[key].reverse();
		});

		understand.result_chart = {};
		understand.result_chart.data = [ '38' ];
		understand.result_chart.labels = [ '38' ];
		understand.result_chart.series = [ 'West Chesire' ];
		understand.result_chart.options = { legend: { display: false } };

		understand.update_chart = function() {
			understand.result_chart.data = [ 
				'38',
				'32',
				'47',
				'22'
			];
			understand.result_chart.labels = [ 
				'38',
				'32',
				'47',
				'22'
			];
			understand.result_chart.series = [ 
				'West Chesire',
				'Bracknell And Ascot',
				'Brent',
				'Cannock Chase'
			];
		};

		understand.open_case_study = function( title ) {
			understand.case_study_open = true;
			understand.case_study_title = title + ' Case Study';
		};

		understand.search = function() {
			if( understand.query ) {
				if( ! understand.show_results ) {
					understand.show_results = true;
				} else {
					understand.show_second_query_data = true;
					understand.update_chart();
				}
			}
		}

		// Case study graph

		understand.case_study = {};
		understand.case_study.labels = ["2019", "2020", "2021", "2022", "2023"];
		understand.case_study.series = ['HIP REPLACEMENTS', 'WEATHER', 'TRAMADOL PRESCRIPTIONS'];
		understand.case_study.data = [
			[4, 12, 60, 54, 72, 90],
			[10, 14, 18, 32, 26, 48],
			[16, 22, 28, 38, 42, 48]
		];

		angular.forEach( understand.case_study.data, function( value, key ) {
			understand.case_study.data[key].reverse();
		});

		understand.initialize_capabilities = function() {
			understand.hospital_capabilities = [{title: 'Leeds General Infirmary', count: 114, width: '0%'}, {title: 'St James\'s University Hospital', count: 86, width: '0%' }, {title: 'Chapel Allerton Hospital', count: 65, width: '0%'}, {title: 'Leeds Children\'s Hospital', count: 58, width: '0%'}, {title: 'Leeds Dental Institute', count: 87, width: '0%' }, {title: 'Seacroft Hospital', count: 87, width: '0%'}, {title: 'Wharfedale Hospital', count: 97, width: '0%' } ];
		};

		understand.initialize_capabilities();

		understand.animate_number = function( start, end, index, duration ) {

			if( ! understand.interval ) {
				understand.interval = [];
			}

			understand.interval[index] = $interval( function() {
				understand.hospital_capabilities[index].display_count = start;
				if( start == end ) {
					if( start > 95 ) understand.hospital_capabilities[index].pulse = true;
					 $interval.cancel( understand.interval[index] );
				} else {
					start++;
				}
			}, duration );

		};

		understand.reveal_capability = function( index ) {
			$timeout( function() {
				understand.animate_number( 0, understand.hospital_capabilities[index].count, index, 10 );
				if( understand.hospital_capabilities[index].count > 90 ) understand.hospital_capabilities[index].alert = true;
				$timeout( function() {
					understand.hospital_capabilities[index].width = ( understand.hospital_capabilities[index].count > 100 ? '100%' : understand.hospital_capabilities[index].count + '%' );
				}, 200 );
				if( index < ( understand.hospital_capabilities.length - 1 ) ) {
					understand.reveal_capability( ( index + 1 ) );
				}
			}, 400);
		};

		understand.toggle_capabilities = function() {
			if( ! understand.show_at_risk_areas ) {
				understand.reveal_capability(0);
			} else {
				angular.forEach( understand.hospital_capabilities, function( value, key ) {
					understand.initialize_capabilities();
				});
			}
			understand.show_at_risk_areas = ! understand.show_at_risk_areas;
		};

		$scope.$on( '$destroy', function() {
			understand = null;
		});

	}

})();
//# sourceMappingURL=app.min.js.map
